# Default values for sgm-optimization-service.

config:
    # The name of the config map to use.
    # If not set a default config map will be created
    existingConfigMap: ""

# Specifies the image to be used.
image:
    registry: quay.io/innovation-hub-bergisches-rheinland
    # Overrides the image repository whose default is the chart name.
    repository: ""
    # Overrides the image tag whose default is the chart appVersion.
    tag: ""

    pullPolicy: IfNotPresent

replicaCount: 1

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
    # Specifies whether a service account should be created
    create: true
    # Annotations to add to the service account
    annotations: {}
    # The name of the service account to use.
    # If not set and create is true, a name is generated using the fullname template
    name: ""

# Annotations to add to the pod
podAnnotations: {}
# Sets the security context of the pod
podSecurityContext:
    {}
    # fsGroup: 2000

# Sets the security context of the container
securityContext:
    {}
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true
    # runAsUser: 1000

service:
    type: ClusterIP
    port: 8080

ingress:
    enabled: false
    className: ""
    annotations:
        {}
        # kubernetes.io/ingress.class: nginx
        # kubernetes.io/tls-acme: "true"
    hosts:
        - host: chart-example.local
          paths:
              - path: /
                pathType: ImplementationSpecific
    tls: []
    #  - secretName: chart-example-tls
    #    hosts:
    #      - chart-example.local

resources:
    {}
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi

autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80
nodeSelector: {}

tolerations: []

affinity: {}
